---
# roles/gitea_server/tasks/main.yml

- name: User and Directory Setup
  tags: gitea_user_setup
  block:
    - name: Ensure Gitea user exists
      ansible.builtin.user:
        name: "{{ gitea_server_user }}"
        group: "{{ gitea_server_group }}"
        create_home: false
        shell: /sbin/nologin
        system: true

    - name: Ensure Gitea directory exists with correct owner and permissions
      ansible.builtin.file:
        path: "{{ gitea_server_path }}"
        state: directory
        owner: "{{ gitea_server_user }}"
        group: "{{ gitea_server_group }}"
        mode: "u=rwx,g=rx,o=-"

- name: Docker Compose and Network Setup
  tags: gitea_docker_setup
  block:
    - name: Deploy Docker Compose file
      ansible.builtin.template:
        src: "docker-compose.yml.j2"
        dest: "{{ gitea_server_path }}/docker-compose.yml"
        owner: "{{ gitea_server_user }}"
        group: "{{ gitea_server_group }}"
        mode: "u=rw,g=r,o=-"

    - name: Create Docker network
      community.docker.docker_network:
        name: "{{ gitea_server_network }}"
        state: present

    - name: Check if .env file exists in role's files directory (on control node)
      ansible.builtin.stat:
        path: "{{ role_path }}/files/.env"
      register: env_file_stat
      delegate_to: localhost
      run_once: true
      become: false

    - name: Copy .env file to target host (if available)
      ansible.builtin.copy:
        src: ".env"
        dest: "{{ gitea_server_path }}/.env"
        owner: "{{ gitea_server_user }}"
        group: "{{ gitea_server_group }}"
        mode: 'u=rw,g=-,o=-'
      when: env_file_stat.stat.exists

- name: Systemd Service Setup
  tags: gitea_service_setup
  block:
    - name: Ensure systemd directory exists
      ansible.builtin.file:
        path: /etc/systemd/system/
        state: directory
        mode: 'u=rwx,g=rx,o=rx'

    - name: Deploy Gitea systemd service
      ansible.builtin.template:
        src: gitea-docker.service.j2
        dest: /etc/systemd/system/gitea-docker.service
        owner: root
        group: root
        mode: 'u=rw,g=r,o=r'
      notify: Reload systemd

    - name: Enable Gitea service
      ansible.builtin.systemd:
        name: gitea-docker
        enabled: true
        daemon_reload: true

    - name: Start Gitea service
      ansible.builtin.systemd:
        name: gitea-docker
        state: started
